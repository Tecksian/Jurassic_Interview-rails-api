var search_data = {"index":{"searchIndex":["applicationcontroller","cage","cagescontroller","dinosaur","dinosaurscontroller","object","species","any_herbivores?()","attributes()","attributes()","attributes()","carnivore_species_fighting?()","carnivore_will_eat_herbivore?()","create()","create()","destroy()","destroy()","happy_cage?()","has_carnivore?()","index()","index()","is_empty?()","power_safety_status()","powered_hash()","show()","status_hash()","survey_carnivores()","to_cage()","update()","update()","readme"],"longSearchIndex":["applicationcontroller","cage","cagescontroller","dinosaur","dinosaurscontroller","object","species","cage#any_herbivores?()","cage#attributes()","dinosaur#attributes()","species#attributes()","cage#carnivore_species_fighting?()","cage#carnivore_will_eat_herbivore?()","cagescontroller#create()","dinosaurscontroller#create()","cagescontroller#destroy()","dinosaurscontroller#destroy()","cage#happy_cage?()","cage#has_carnivore?()","cagescontroller#index()","dinosaurscontroller#index()","cage#is_empty?()","cage#power_safety_status()","cage::powered_hash()","dinosaurscontroller#show()","cage::status_hash()","cage#survey_carnivores()","dinosaurscontroller#to_cage()","cagescontroller#update()","dinosaurscontroller#update()",""],"info":[["ApplicationController","","ApplicationController.html","","<p>Configured to use RocketPants. Why use RocketPants? Mostly because I&#39;ve\nalways wanted to try it out. …\n"],["Cage","","Cage.html","","<p>Cages don&#39;t need a name, so we just use id as our cage number.\n"],["CagesController","","CagesController.html","",""],["Dinosaur","","Dinosaur.html","","<p>Dinosaur class. Only fundamental attributes are name, cage_id, and\nspecies_id. Created method-based attributes …\n"],["DinosaursController","","DinosaursController.html","",""],["Object","","Object.html","",""],["Species","","Species.html","","<p>A model for species – however, we are treating this as reference data, like\na dictionary. Species data …\n"],["any_herbivores?","Cage","Cage.html#method-i-any_herbivores-3F","()","<p>are there any herbivores in the cage?\n"],["attributes","Cage","Cage.html#method-i-attributes","()","<p>the attributes to display in serialization\n"],["attributes","Dinosaur","Dinosaur.html#method-i-attributes","()","<p>overloading attributes is the crux of ActiveModel::Serializers\n"],["attributes","Species","Species.html#method-i-attributes","()",""],["carnivore_species_fighting?","Cage","Cage.html#method-i-carnivore_species_fighting-3F","()","<p>true if the carnivores in this cage will kill each other, false otherwise\n"],["carnivore_will_eat_herbivore?","Cage","Cage.html#method-i-carnivore_will_eat_herbivore-3F","()","<p>true if the carnivores in this cage will eat an herbivore, false otherwise\n"],["create","CagesController","CagesController.html#method-i-create","()","<p>POST /cages POST /cages.json\n"],["create","DinosaursController","DinosaursController.html#method-i-create","()","<p>POST /dinosaurs POST /dinosaurs.json\n"],["destroy","CagesController","CagesController.html#method-i-destroy","()","<p>DELETE /cages/1 DELETE /cages/1.json\n"],["destroy","DinosaursController","DinosaursController.html#method-i-destroy","()","<p>DELETE /dinosaurs/1 DELETE /dinosaurs/1.json\n"],["happy_cage?","Cage","Cage.html#method-i-happy_cage-3F","()","<p>will the dinosaurs get along, without killing and/or eating each other?\n"],["has_carnivore?","Cage","Cage.html#method-i-has_carnivore-3F","()","<p>are there any carnivores in the cage?\n"],["index","CagesController","CagesController.html#method-i-index","()","<p>GET /cages GET /cages.json\n"],["index","DinosaursController","DinosaursController.html#method-i-index","()","<p>GET /dinosaurs GET /dinosaurs.json\n"],["is_empty?","Cage","Cage.html#method-i-is_empty-3F","()","<p>TRUE if the cage is empty, FALSE if it is not\n"],["power_safety_status","Cage","Cage.html#method-i-power_safety_status","()","<p>is it safe to power down, or to put a dino in?\n"],["powered_hash","Cage","Cage.html#method-c-powered_hash","()",""],["show","DinosaursController","DinosaursController.html#method-i-show","()","<p>GET /dinosaurs/1 GET /dinosaurs/1.json\n"],["status_hash","Cage","Cage.html#method-c-status_hash","()","<p>avoid having to type “ACTIVE” and/or “INACTIVE” a bazillion times…\n"],["survey_carnivores","Cage","Cage.html#method-i-survey_carnivores","()","<p>As the only condition on herbivores are the power being on and\novercrowding, we only need to track the …\n"],["to_cage","DinosaursController","DinosaursController.html#method-i-to_cage","()","<p>PUT /dinosaurs/cage\n"],["update","CagesController","CagesController.html#method-i-update","()","<p>PATCH/PUT /cages/1 PATCH/PUT /cages/1.json\n"],["update","DinosaursController","DinosaursController.html#method-i-update","()","<p>PATCH/PUT /dinosaurs/1 PATCH/PUT /dinosaurs/1.json\n"],["README","","README_rdoc.html","","<p>README\n<p>Version 0, or &#39;open alpha&#39;.…\n<p>Jurassic Interview open-alpha! Dinosaurs? YES! Cages? YES …\n"]]}}